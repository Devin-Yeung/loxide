---
source: crates/loxide_parser/src/parser.rs
expression: asts
---
[
    Ok(
        Expr {
            kind: Binary(
                BinaryExpr {
                    lhs: Expr {
                        kind: Literal(
                            Number(
                                1.0,
                            ),
                        ),
                        span: [Span],
                    },
                    rhs: Expr {
                        kind: Literal(
                            Number(
                                2.0,
                            ),
                        ),
                        span: [Span],
                    },
                    operator: Less,
                },
            ),
            span: [Span],
        },
    ),
    Ok(
        Expr {
            kind: Binary(
                BinaryExpr {
                    lhs: Expr {
                        kind: Literal(
                            Number(
                                1.0,
                            ),
                        ),
                        span: [Span],
                    },
                    rhs: Expr {
                        kind: Literal(
                            Number(
                                2.0,
                            ),
                        ),
                        span: [Span],
                    },
                    operator: LessEqual,
                },
            ),
            span: [Span],
        },
    ),
    Ok(
        Expr {
            kind: Binary(
                BinaryExpr {
                    lhs: Expr {
                        kind: Literal(
                            Number(
                                1.0,
                            ),
                        ),
                        span: [Span],
                    },
                    rhs: Expr {
                        kind: Literal(
                            Number(
                                2.0,
                            ),
                        ),
                        span: [Span],
                    },
                    operator: Greater,
                },
            ),
            span: [Span],
        },
    ),
    Ok(
        Expr {
            kind: Binary(
                BinaryExpr {
                    lhs: Expr {
                        kind: Literal(
                            Number(
                                1.0,
                            ),
                        ),
                        span: [Span],
                    },
                    rhs: Expr {
                        kind: Literal(
                            Number(
                                2.0,
                            ),
                        ),
                        span: [Span],
                    },
                    operator: GreaterEqual,
                },
            ),
            span: [Span],
        },
    ),
]
